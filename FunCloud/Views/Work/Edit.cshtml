@model FunCloud.Work.WorkPublicModel

@using FunCloud.Helpers

@{
    ViewBag.Title = "Редактирование";
    int UserID = this.ViewBag.UserID;
}

<h2 class="mb-4">Редактирование</h2>

<div class="card" style="width: 100%; margin: 0 0 12px 0;">

    @if (ViewBag.isAccess)
    {

        using (Html.BeginForm("Edit", "Work", FormMethod.Post, new { enctype = "multipart/form-data" }))
        {
            @Html.AntiForgeryToken()
            @Html.ValidationSummary(true)

            <div class="card-body">

                <div class="form-group">
                    <h5 class="card-title">Название:</h5>
                    <input type="text" class="form-control" id="Title" name="Title" value="@Model.Title" aria-describedby="nameTitle">
                    @Html.ValidationMessageFor(model => model.Title)
                </div>

                <div class="form-group">
                    <h5 class="card-title">Серия:</h5>
                    @Html.DropDownList("Serial", ViewBag.Serials as SelectList, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Serial)
                </div>

                <div class="form-group">
                    <h5 class="card-title">Категория:</h5>
                    @Html.DropDownList("Category", ViewBag.Categories as SelectList, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Category)
                </div>

                <div class="form-group">
                    <h5 class="card-title">Фэндом:</h5>
                    @Html.DropDownList("Fandome", ViewBag.Fandomes as SelectList, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Fandome)
                </div>

                <div class="form-group">
                    <h5 class="card-title">Метки:</h5>
                    <input type="text" class="form-control" id="Marks" name="Marks" aria-describedby="nameMarks" data-toggle="dropdown">
                    @Html.ValidationMessageFor(model => model.Marks)
                    @Html.Hidden("MarksPos", "0")
                    <div class="dropdown-menu dropdown-menu-left dropdown-menu-lg-left" id="MarksDropDown" aria-labelledby="MarksName">
                    </div>
                </div>

                <div class="form-group">
                    <h5 class="card-title">Описание:</h5>
                    <textarea class="form-control" id="Description" name="Description" rows="4" maxlength="255">@Model.Description</textarea>
                    @Html.ValidationMessageFor(model => model.Description)
                </div>

                 <div class="form-group">
                     <h5 class="card-title">Файл основного текста (.doc, .docx, .pdf, .txt):</h5>
                    <div class="custom-file" style="margin-bottom: 12px;">
                        <input type="file" class="custom-file-input" name="basefile" id="file">
                        <label id="file_list" class="custom-file-label" for="file" data-browse="Обзор" style="max-width:20em;">Выберите файл</label>
                    </div>
                </div>

                <div class="form-group">
                    @Html.Hidden("Author", Model.Author)
                </div>

                <div class="form-group">
                    @Html.Hidden("Files", Model.Files)
                </div>

                <div class="form-group">
                    <h5 class="card-title">Состояние:</h5>
                    @Html.DropDownList("State", ViewBag.States as SelectList, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.State)
                </div>

                <button type="submit" class="@Buttons.Default">Сохранить</button>

            </div>

        }
    }
    else
    {
        <div class="card-body">
            <h5 class="text-muted">Доступ запрещен, вы не авторизированы!</h5>
        </div>
    }

</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

<script>
    var fields = document.querySelectorAll('[type=file]');

    function updFileList() {
        $('[for=' + $(this).attr("id") + ']').html(this.value);
    }

    for (var i = 0; i < fields.length; i++) {
        fields[i].addEventListener('change', updFileList, false);
    }

     $("#Marks").keyup(
        function () {
            $("#MarksPos").val(getCaretPos(this));
            FindValue2("/Work/FindValue", getStr(this, "#MarksPos"), 2, "#MarksDropDown", "#Marks");
        }
    );
</script>
